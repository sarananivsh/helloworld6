name: Create Mule3_backup Branch Before Other Workflows Start

on:
  workflow_dispatch:  # Triggered manually or by API call
  pull_request:
    types:
      - opened        # Trigger when a PR is opened
      - synchronize   # Trigger when a PR is updated
      - reopened      # Trigger when a PR is reopened
    branches:
      - main          # Adjust to the base branch for your PR

jobs:
  create-backup:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}  # Ensure authentication

      - name: Verify current branch
        run: |
          git branch -a  # Check all branches (including remote branches)
          git remote -v  # Verify the remotes and URL

      - name: Fetch the latest branches and prune deleted ones
        run: |
          # Ensure we fetch the latest state from the remote
          git fetch --prune origin
          echo "Fetched branches:"
          git branch -a  # List all local and remote branches

      - name: Check if Mule3_backup branch exists
        id: check_backup
        run: |
          BACKUP_BRANCH="Mule3_backup"
          
          # Fetch all remote branches (prune to remove deleted ones)
          git fetch --prune origin
          
          # Check if the backup branch exists on the remote
          if git ls-remote --heads origin "refs/heads/$BACKUP_BRANCH"; then
            echo "Backup branch '$BACKUP_BRANCH' already exists. Skipping creation."
            echo "backup_exists=true" >> $GITHUB_ENV
          else
            echo "Backup branch '$BACKUP_BRANCH' does not exist. It will be created."
            echo "backup_exists=false" >> $GITHUB_ENV
          fi

      - name: Create Mule3_backup branch if it doesn't exist
        if: env.backup_exists == 'false'
        run: |
          BACKUP_BRANCH="Mule3_backup"
          
          # Fetch the latest changes from the remote repository
          git fetch origin
          
          # Ensure we're on the main branch
          git checkout main
          git pull origin main  # Ensure it's up to date
          
          # Create a new branch from main
          git checkout -b $BACKUP_BRANCH
          
          # Push the new branch to the remote repository
          git push origin $BACKUP_BRANCH
          
          echo "Backup branch '$BACKUP_BRANCH' created and pushed successfully."

      - name: Finish Create Mule3_backup Branch
        run: echo "Mule3_backup branch creation process completed."
