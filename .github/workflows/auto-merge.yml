name: Create Backup Branch and Auto Merge PRs

on:
  workflow_dispatch:  # Manual trigger for the workflow
  push:
    branches:
      - main  # Trigger workflow when there is a push to the main branch
  schedule:
    - cron: '0 * * * *'  # Runs every hour
  pull_request:
    types:
      - labeled
      - synchronize
      - opened
    branches:
      - main

permissions:
  contents: write
  pull-requests: write
  actions: write

jobs:
  create-backup-branch:
    runs-on: ubuntu-latest

    permissions:
      contents: write  # Ensures write access to contents for creating branches

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Check if folder exists
        id: check-folder
        run: |
          if [ -d "path_to_folder" ]; then
            echo "Folder exists"
            echo "exists=true" >> $GITHUB_ENV
          else
            echo "Folder does not exist"
            echo "exists=false" >> $GITHUB_ENV
          fi

      - name: Check if Mule3_backup branch exists remotely
        id: check-branch
        run: |
          git fetch origin
          if git show-ref --verify --quiet refs/remotes/origin/Mule3_backup; then
            echo "Branch 'Mule3_backup' already exists remotely. Skipping creation."
            echo "branch_exists=true" >> $GITHUB_ENV
          else
            echo "Branch 'Mule3_backup' does not exist remotely. Proceeding with creation."
            echo "branch_exists=false" >> $GITHUB_ENV
          fi

      - name: Create and push new branch
        if: env.branch_exists == 'false' && env.exists == 'false'
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

          git checkout -b Mule3_backup

          # Push the newly created branch
          git push --force origin Mule3_backup

      - name: Skip creation if branch exists
        if: env.branch_exists == 'true'
        run: |
          echo "Skipping branch creation, 'Mule3_backup' already exists."

  auto-merge:
    needs: create-backup-branch
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Check if PR has 'dependencies' label
        if: contains(github.event.pull_request.labels.*.name, 'dependencies')
        run: echo "PR has 'dependencies' label. Proceeding with merge."

      - name: Merge PR if label is present
        if: contains(github.event.pull_request.labels.*.name, 'dependencies')
        run: |
          gh pr merge ${{ github.event.pull_request.number }} --merge --auto --delete-branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

